<?xml version="1.0" encoding="utf-8"?>

<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/" xmlns:role="http://www.sitecore.net/xmlconfig/role/">
  <sitecore role:require="Standalone or ContentManagement or XMCloud">
    <api>
      <GraphQL>
        <endpoints>
          <serialization url="/sitecore/api/management"
                         type="Sitecore.Services.GraphQL.Hosting.GraphQLEndpoint, Sitecore.Services.GraphQL.NetFxHost"
                         resolve="true">
            <url>$(url)</url>

            <schema hint="list:AddSchemaProvider">
              <serialization type="Sitecore.DevEx.GraphQL.Serialization.SerializationSchemaProvider, Sitecore.DevEx.GraphQL.Serialization" resolve="true" />
            </schema>

            <security type="Sitecore.Services.GraphQL.Hosting.Security.GraphQLSecurity, Sitecore.Services.GraphQL">
              <requireAuthentication>true</requireAuthentication>
              <requireApiKey>false</requireApiKey>
            </security>

            <performance ref="/sitecore/api/GraphQL/defaults/performance/standard" />
            <cache type="Sitecore.Services.GraphQL.Hosting.QueryTransformation.Caching.GraphQLQueryCache, Sitecore.Services.GraphQL.NetFxHost">
              <param desc="name">$(url)</param>
              <param desc="maxSize">10MB</param>
            </cache>
          </serialization>
        </endpoints>
      </GraphQL>
    </api>
    <services>
      <configurator type="Sitecore.DevEx.GraphQL.Serialization.DependencyConfigurator, Sitecore.DevEx.GraphQL.Serialization" />
    </services>
    <settings>
      <setting name="Sitecore.DevEx.GraphQL.Serialization.ForceBlobRestore" value="false" />
    </settings>
    <!-- Enables history engine over the master + core DBs (not enabled by default since 9.0) because we need it to watch changes to items to serialize them -->
    <pipelines>
      <initializeManagers>
        <processor type="Sitecore.Pipelines.InitializeManagers.InitializeHistoryManager, Sitecore.Kernel"
                   patch:after="processor[@type='Sitecore.Pipelines.InitializeManagers.InitializeProxyManager, Sitecore.Kernel']" />
      </initializeManagers>
      <owin.cookieAuthentication.validateIdentity>
        <processor type="Sitecore.Owin.Authentication.Pipelines.CookieAuthentication.ValidateIdentity.ValidateSiteNeutralPaths, Sitecore.Owin.Authentication">
          <siteNeutralPaths hint="list">
            <path hint="devexSerialization">/sitecore/api/management/</path>
          </siteNeutralPaths>
        </processor>
      </owin.cookieAuthentication.validateIdentity>
    </pipelines>
    <databases>
      <database id="master">
        <Engines.HistoryEngine.Storage>
          <obj type="Sitecore.Data.$(database).$(database)HistoryStorage, Sitecore.Kernel">
            <param connectionStringName="$(id)" />
            <EntryLifeTime>1.00:00:00</EntryLifeTime>
          </obj>
        </Engines.HistoryEngine.Storage>
        <Engines.HistoryEngine.SaveDotNetCallStack>false</Engines.HistoryEngine.SaveDotNetCallStack>
      </database>
      <database id="core">
        <Engines.HistoryEngine.Storage>
          <obj type="Sitecore.Data.$(database).$(database)HistoryStorage, Sitecore.Kernel">
            <param connectionStringName="$(id)" />
            <EntryLifeTime>1.00:00:00</EntryLifeTime>
          </obj>
        </Engines.HistoryEngine.Storage>
        <Engines.HistoryEngine.SaveDotNetCallStack>false</Engines.HistoryEngine.SaveDotNetCallStack>
      </database>
    </databases>
    <scheduling>
      <agent type="Sitecore.Tasks.CleanupHistory" method="Run" interval="04:00:00"
             patch:after="agent[@type='Sitecore.Tasks.CompactClientDataAgent']" />
    </scheduling>
  </sitecore>
</configuration>
